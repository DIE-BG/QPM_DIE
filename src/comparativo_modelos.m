%{
Gráfica de inflación, gdp gap y tasa de interés.
%}

colors = [0 0 1;
          0.1220 0.6900 0.2510;
          1 0.812 0;
          0.839 0.525 0.114;
          0.361 0 0.459];

pred_start = qq(2019,1);
pred_end = qq(2029,4);


list_graphs = {'D4L_CPI', 'L_GDP_GAP', 'RS'};
ss = {MODEL_libre.F.ss_D4L_CPI_TAR, 0, 5};

for i = 1:length(list_graphs)
        figure;

        set(gcf, ...
            'defaultaxesfontsize',13, ...
            'Position', [1 42.0182 1600.1 1100] ...
            );
        main_p = uipanel('Units','normalized');

        % ----- Panel de gráfica -----
        plot_p = uipanel( ...
            main_p, ...
            'Position', [0, 1 - 0.9, 1, 0.9], ...
            'BackgroundColor', [1, 1, 1] ...
            );

        ax = axes(plot_p, 'Units','normalized' ,'Position', [0.1 0.1 0.85 0.8]);

        plot(pred_start:pred_end,...
            MODEL_libre.F.(list_graphs{i}), ...
            '.-k', ...
            'MarkerSize', 17, ...
            'LineWidth', 2 ...
            );

        hold on

        plot(pred_start:pred_end,...
                 MODEL_ma.Esc.v6.pred.(list_graphs{i}), ...
                 'Color', colors(5,1:3),...
                'MarkerSize', 17, ...
                'LineWidth', 2 ...
                );       

        plot(pred_start:pred_end,...
                 MODEL_com_rem.Esc.v6.pred.(list_graphs{i}), ...
                 'Color', colors(4,1:3),...
                'MarkerSize', 17, ...
                'LineWidth', 2 ...
                );       

        plot(pred_start:pred_end,...
                 MODEL_rho_rem.Esc.v6.pred.(list_graphs{i}), ...
                 'Color', colors(3,1:3),...
                'MarkerSize', 17, ...
                'LineWidth', 2 ...
                );

        plot(pred_start:pred_end,...
                 MODEL_ss_rem.Esc.v6.pred.(list_graphs{i}), ...
                 'Color', colors(2,1:3),...
                'MarkerSize', 17, ...
                'LineWidth', 2 ...
                );

        plot(pred_start:pred_end,...
                 MODEL_libre.F_pred.(list_graphs{i}), ...
                 'Color', colors(1,1:3),...
                'MarkerSize', 17, ...
                'LineWidth', 2 ...
                );

        %Returns handles to the patch and line objects
        chi = get(gca, 'Children');
        %Reverse the stacking order so that the patch overlays the line
        set(gca, 'Children',flipud(chi));

        legend({'Libre', 'estado estacionario rem', 'coeficiente autorregresivo rem', 'combinado estacionario y autorregresivo',...
                'Tendencia Móvil', 'Historia'},...
                'Interpreter','none', 'Location', 'Best')

        if ss{i} > 1.1^-100
        hline(...
            ss{i}, ...
            'LineWidth', 1.5, ...
            'LineStyle', ':' ...
            );
        
        else
            
            zeroline()
        end
        
        highlight(pred_start:qq(2024,3), 'alpha', 0.25);

        vline( ...
            qq(2024,3),...
            'LineWidth', 1, ...
            'LineStyle', '-.' ...
            );

        % Anotación
        x_lims = get(gca, 'XLim');
        Sim.scripts.anotaciones_simples(...
            x_lims(1), ...
            real(ss{i}), ...
            sprintf('Estado Estacionario: %0.2f', ss{i}), ...
            'Container', plot_p, ...
            'LineStyle', ':', ...
            'HeadStyle', 'none', ...
            'FontSize', 10 ...
            );
        
        
        title( ...
            sprintf(...
            '%s \n %s - %s', ...
            MODEL_libre.F.(list_graphs{i}).Comment{1}, ...
            dat2char(pred_start), ...
            dat2char(pred_end)...
            ) ,...
            'Interpreter','none'...
            );

        subtitle('Ejercicios con brecha del DAMP');

        hold off

        table_p = uipanel( ...
            main_p, ...
            'Position', [0, 1 - 0.9 - 0.10, 1, 0.10], ...
            'BackgroundColor', [1, 1, 1] ...
            );

        data_table = [];
        data_table(:, 1) = MODEL_libre.F_pred.(list_graphs{i})(qq(2024,4):qq(2026,4));
        data_table(:, 2) = MODEL_ss_rem.Esc.v6.pred.(list_graphs{i})(qq(2024,4):qq(2026,4));
        data_table(:, 3) = MODEL_rho_rem.Esc.v6.pred.(list_graphs{i})(qq(2024,4):qq(2026,4));
        data_table(:, 4) = MODEL_com_rem.Esc.v6.pred.(list_graphs{i})(qq(2024,4):qq(2026,4));
        data_table(:, 5) = MODEL_ma.Esc.v6.pred.(list_graphs{i})(qq(2024,4):qq(2026,4));

        text_Color = colors;

        Sim.scripts.plot_data_table( ...
            qq(2024,4):qq(2026,4), ...
            data_table, ...
            'Parent', table_p, ...
            'SeriesNames', {'Libre', 'estado estacionario rem', 'coeficiente autorregresivo rem',...
                            'combinado estacionario y autorregresivo', 'Tendencia Móvil'}, ...
            'TextColor', text_Color, ...
            'FontSize', 10 ...
            );

        axis on

        
        Sim.scripts.pausaGuarda(...
            sprintf('%s.png', list_graphs{i}), ...
            'AutoSave', true ...
            );

end
