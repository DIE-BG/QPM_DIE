function contributions(MODEL, varargin)
%{
    Descomposición de las contribuciones para cada una de las variables de
    interés. Las constribuciones se construyen a partir de la ecuación que
    define a cada una dentro de la estructura del modelo.

    Variables:
    MCI: Indice de Condiciones Monetarias 
    RMC: Costos Marginales Reales
    IS: Curva IS (Demanda Agregada)
    Phillips: Curva de Phillips (Inflación subyacente (variación
              intertrimestral))
    Regla de Taylor: Tasa de interés lider
    UIP: Paridad de interés descubierta


__`MODEL`__ [ struct ] -
Debe contener al menos la estructura con los resultados del 
pre-procesamiento de los datos.

* 'StartDate' = {} [ `Cell` ] - Fechas de inicio del plot (Puede ser una o mas).
* 'EndDatePlot' = {} [ `Cell` ] - fechas de fin del plot (pueden ser una o mas).

* 'Esc_add' = {}  [ `Cell` ] - Escenario adicional a plotear. Cell array 
    con dos elementos: (1) Versión o fecha del escenario adicional y (2)
    Base de datos con los datos historicos del corrimiento anterior.

Departamento de Investigaciones Económicas - 2024.
MJGM/JGOR

%}

p = inputParser;
addParameter(p, 'StartDate', {MODEL.DATES.hist_start, MODEL.DATES.hist_end - 20});
addParameter(p, 'EndDatePlot', {MODEL.DATES.pred_end});
addParameter(p, 'SavePath', {});
addParameter(p, 'Esc_add', {}); % libre v0, alterno v1, contrafactual v2...
addParameter(p, 'tab_range', {});
addParameter(p, 'Difference', false);  % Para seleccionar si se desea primera diferencia

parse(p, varargin{:});
params = p.Results;

%% Limpieza y creación de folders
% Verificación y creación del directorio para las gráficas
if isempty(params.SavePath)
    params.SavePath = fullfile('plots', MODEL.CORR_DATE, params.Esc_add{1}, 'contributions');
end

if ~isfolder(params.SavePath)
    mkdir(params.SavePath)
    mkdir(fullfile(params.SavePath, 'long'))
    mkdir(fullfile(params.SavePath, 'short'))
else
    rmdir(params.SavePath, 's')
    mkdir(params.SavePath)
    mkdir(fullfile(params.SavePath, 'long'))
    mkdir(fullfile(params.SavePath, 'short'))
end

%% Carga de base de datos mes anterior
if strcmp(params.Esc_add{1}, 'v0')   
    full_data_add = params.Esc_add{2};
else
    full_data_add.F_pred = params.Esc_add{2};
    full_data_add.DATES = MODEL.DATES;
end
    
%% Identificador
if strcmp(params.Esc_add{1}, 'v0')   
   params.date_ant = MODEL.CORR_DATE_ANT;
else
   params.date_ant = 'Alterno';
end

%% Datos para barras 
lseries = get(MODEL.MF, 'xlist') + get(MODEL.MF, 'elist'); 

if params.Difference 
    d_cur = databank.apply(@diff, MODEL.F_pred, 'InputNames=', lseries); 
    d_ant = databank.apply(@diff, full_data_add.F_pred, 'InputNames=', lseries); 
    % Asignar a cero las constantes de estado estacionario
    d_cur = databank.apply(@(x) 0, d_cur, 'StartsWith=', 'ss_'); 
    d_ant = databank.apply(@(x) 0, d_ant, 'StartsWith=', 'ss_');
    
    subtitle = '(Contribuciones a la primera diferencia)'; 
else
    d_cur = MODEL.F_pred; 
    d_ant = full_data_add.F_pred; 
    
    subtitle = '(Contribuciones)'; 
end

%% Indice de Condiciones Monetarias (MCI)
for rng = params.StartDate
    % Corrimiento actual
    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    % Barras
    d = d_cur; 
    bar(rng{1}:params.EndDatePlot{1}, [ ...
            d.b4 * d.RR_GAP, ...
            -d.b6 * d.L_Z_GAP, ...
            -(1 - d.b4 - d.b6) * d.PM_D4L_MB ... 
        ],...
        'stacked');
    
    hold on
    
    % Lineas
    plot(rng{1}:params.EndDatePlot{1}, d_cur.MCI,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d_cur.MCI,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
    
    hold off
    
    legend({ ... 
        'Tasa Real (brecha)', ...
        'Tipo de Cambio Real (brecha)',...
        'Shock persistente de Base Monetaria'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.345 0.922 0.988;...
                0.729 0.98 0.306;...
                0.804 0.345 0.988;])
    
    if strcmp(params.Esc_add{1}, 'v0')
    title({'Indice de Condiciones Monetarias',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
        
    else
    title({'Indice de Condiciones Monetarias',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'Corrimiento Libre',...
            'FontSize', 17)

    end
        
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'MCI', MODEL.CORR_DATE)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'MCI', MODEL.CORR_DATE)), ...
            'AutoSave', true);
    
    end
    
    % Corrimiento Anterior/Escenario

    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_ant; 
    bar(rng{1}:params.EndDatePlot{1}, [ ...
            d.b4 * d.RR_GAP, ...
            -d.b6 * d.L_Z_GAP, ...
            -(1 - d.b4 - d.b6) * d.PM_D4L_MB ... 
        ], ...
        'stacked');
    
    hold on
    
    % Lineas
    plot(rng{1}:params.EndDatePlot{1}, d_ant.MCI,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d_ant.MCI,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    if strcmp(params.Esc_add{1}, 'v0')
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
      
    else
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');    
    
    end
        
    hold off
    
    legend({ ... 
        'Tasa Real (brecha)', ... 
        'Tipo de Cambio Real (brecha)',...
        'Shock persistente de Base Monetaria'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.345 0.922 0.988;...
                0.729 0.98 0.306;...
                0.804 0.345 0.988;])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Indice de Condiciones Monetarias',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    
    else
    title({'Indice de Condiciones Monetarias',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            MODEL.Esc.(params.Esc_add{1}).name,...
            'FontSize', 17)    
    end
        
    grid on
        
        % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'MCI', params.date_ant)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'MCI', params.date_ant)), ...
            'AutoSave', true);
    
    end
    
    
end

%% Costos Marginales Reales
for rng = params.StartDate
    % Corrimiento actual
    
    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_cur; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.a3*d.L_GDP_GAP (1-d.a3)*d.L_Z_GAP],...
        'stacked');
    
    hold on
    
    % Lineas
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.RMC,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.RMC,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
    
    hold off
    
    legend({'Producto Doméstico (brecha)', 'Tipo de Cambio Real (brecha)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.435 0.584 0.851;...
                0.729 0.98 0.306;])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Costos Marginales Reales',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    
    else
    title({'Costos Marginales Reales',...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'Corrimiento Libre',...
            'FontSize', 17) 
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'RMC', MODEL.CORR_DATE)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'RMC', MODEL.CORR_DATE)), ...
            'AutoSave', true);
    
    end
    
    % Corrimiento Anterior/Escenario

    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_ant; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.a3*d.L_GDP_GAP (1-d.a3)*d.L_Z_GAP],...
        'stacked');
    
    hold on
    
    % Lineas
    plot(rng{1}:params.EndDatePlot{1}, d.RMC,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.RMC,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    if strcmp(params.Esc_add{1}, 'v0')
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
      
    else
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');    
    end
    
    hold off
    
    legend({'Producto Doméstico (brecha)', 'Tipo de Cambio Real (brecha)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.435 0.584 0.851;...
                0.729 0.98 0.306;])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Costos Marginales Reales',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    
    else
    title({'Costos Marginales Reales',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            MODEL.Esc.(params.Esc_add{1}).name,...
            'FontSize', 17) 
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'RMC', params.date_ant)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'RMC', params.date_ant)), ...
            'AutoSave', true);
    
    end
    
    
end

%% Curva IS (MCI completo)
for rng = params.StartDate
    % Corrimiento actual
    
    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_cur; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.b1*d.L_GDP_GAP.shift(-1) -d.b2*d.MCI,...
         d.b3*d.L_GDP_RW_GAP,...
         d.b5*(d.REM_GDP - d.ss_REM_GDP) d.SHK_L_GDP_GAP],...
        'stacked');
    
    hold on
    
    % Lineas
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.L_GDP_GAP,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.L_GDP_GAP,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
    
    hold off
    
    legend({'Brecha Producto Doméstico (rezago)', 'Condiciones Monetarias', 'Producto Externo (brecha)',...
            'Remesas', 'Shock (Brecha Producto Doméstico)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.435 0.584 0.851;...
                0.988 0.624 0.345;...
                0.604 0.553 0.514;...
                1 0.529 0.82;...
                0.812 0.89 0.604])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Brecha del Producto Doméstico',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Brecha del Producto Doméstico',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'Corrimiento Libre',...
            'FontSize', 17)
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'L_GDP_GAP', MODEL.CORR_DATE)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'L_GDP_GAP', MODEL.CORR_DATE)), ...
            'AutoSave', true);
    
    end
    
    % Corrimiento Anterior/Escenario

    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_ant; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.b1*d.L_GDP_GAP.shift(-1) -d.b2*d.MCI,...
         d.b3*d.L_GDP_RW_GAP,...
         d.b5*(d.REM_GDP - d.ss_REM_GDP) d.SHK_L_GDP_GAP],...
        'stacked');
    
    hold on
    
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.L_GDP_GAP,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.L_GDP_GAP,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    if strcmp(params.Esc_add{1}, 'v0')
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
      
    else
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');    
    end
    
    hold off
    
    legend({'Brecha Producto Doméstico (rezago)', 'Condiciones Monetarias', 'Producto Externo (brecha)',...
            'Remesas', 'Shock (Brecha Producto Doméstico)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.435 0.584 0.851;...
                0.988 0.624 0.345;...
                0.604 0.553 0.514;...
                1 0.529 0.82;...
                0.812 0.89 0.604])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Brecha del Producto Doméstico',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Brecha del Producto Doméstico',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            MODEL.Esc.(params.Esc_add{1}).name,...
            'FontSize', 17)
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'L_GDP_GAP', params.date_ant)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'L_GDP_GAP', params.date_ant)), ...
            'AutoSave', true);
    
    end
    
    
end

%% Curva IS (MCI componentes)
for rng = params.StartDate
    % Corrimiento actual
    
    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_cur; 
    bar(rng{1}:params.EndDatePlot{1}, [ ...
            d.b1*d.L_GDP_GAP.shift(-1),...
            ... % Componentes MCI
            -d.b2 * d.b4 * d.RR_GAP, ...
            -d.b2 * -d.b6 * d.L_Z_GAP, ...
            -d.b2 * -(1 - d.b4 - d.b6) * d.PM_D4L_MB, ... 
            ... % Resto ec. IS
            d.b3*d.L_GDP_RW_GAP,...
            d.b5*(d.REM_GDP - d.ss_REM_GDP), ...
            d.SHK_L_GDP_GAP ... 
        ],...
        'stacked');
    
    hold on
    
    % Lineas
    plot(rng{1}:params.EndDatePlot{1}, d_cur.L_GDP_GAP,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d_cur.L_GDP_GAP,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
    
    hold off
    
    legend({'Brecha Producto Doméstico (rezago)',...
        'Tasa Real (brecha)', 'Tipo de Cambio Real', 'Shock persistente de Base Monetaria',...
        'Producto Externo (brecha)', 'Remesas',...
        'Shock (Brecha Producto Doméstico)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.435 0.584 0.851;...
                0.345 0.922 0.988;...
                0.729 0.98 0.306;...
                0.804 0.345 0.988;...
                0.604 0.553 0.514;...
                1 0.529 0.82;...
                0.812 0.89 0.604])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Brecha del Producto Doméstico',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)   
    else
    title({'Brecha del Producto Doméstico',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'Corrimiento Libre',...
            'FontSize', 17)
    end
    
    grid on 
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'L_GDP_GAP_MCI', MODEL.CORR_DATE)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'L_GDP_GAP_MCI', MODEL.CORR_DATE)), ...
            'AutoSave', true);
    
    end
    
    % Corrimiento Anterior/Escenario

    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_ant; 
    bar(rng{1}:params.EndDatePlot{1},[ ...
            d.b1*d.L_GDP_GAP.shift(-1),...
            ... % Componentes MCI
            -d.b2 * d.b4 * d.RR_GAP, ...
            -d.b2 * -d.b6 * d.L_Z_GAP, ...
            -d.b2 * -(1 - d.b4 - d.b6) * d.PM_D4L_MB, ... 
            ... % Resto ec. IS
            d.b3*d.L_GDP_RW_GAP,...
            d.b5*(d.REM_GDP - d.ss_REM_GDP), ...
            d.SHK_L_GDP_GAP ... 
        ],...
        'stacked');
    
    hold on
    
    % Lineas
    plot(rng{1}:params.EndDatePlot{1}, d.L_GDP_GAP,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.L_GDP_GAP,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    if strcmp(params.Esc_add{1}, 'v0')
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
      
    else
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');    
    end
    
    hold off
    
    legend({'Brecha Producto Doméstico (rezago)',...
        'Tasa Real (brecha)', 'Tipo de Cambio Real', 'Shock persistente de Base Monetaria',...
        'Producto Externo (brecha)', 'Remesas',...
        'Shock (Brecha Producto Doméstico)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.435 0.584 0.851;...
                0.345 0.922 0.988;...
                0.729 0.98 0.306;...
                0.804 0.345 0.988;...
                0.604 0.553 0.514;...
                1 0.529 0.82;...
                0.812 0.89 0.604])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Brecha del Producto Doméstico',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)   
    else
    title({'Brecha del Producto Doméstico',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            MODEL.Esc.(params.Esc_add{1}).name,...
            'FontSize', 17)
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'L_GDP_GAP_MCI', params.date_ant)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'L_GDP_GAP_MCI', params.date_ant)), ...
            'AutoSave', true);
    
    end
    
    
end

%% Curva Phillips (Inflación subyacente)
for rng = params.StartDate
    % Corrimiento actual
    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_cur; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.a1*d.DLA_CPIXFE.shift(-1) (1-d.a1)*d.E_DLA_CPIXFE,...
         d.a2*d.RMC d.SHK_DLA_CPIXFE],...
        'stacked');
    
    hold on
    
    % Lineas
    plot(rng{1}:params.EndDatePlot{1}, d.DLA_CPIXFE,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.DLA_CPIXFE,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
    
    hold off
    
    legend({'Inflación subyacente (rezago)', 'Inflación subyacente (expectativas)', 'RMC', 'Shock (Inflación subyacente)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([1 0.373 0.263;...
                0.208 0.22 0.314;...
                0.729 0.612 0.184;...
                0.4660 0.6740 0.1880])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Inflación subyacente',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Inflación subyacente',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'Corrimiento Libre',...
            'FontSize', 17)
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'DLA_CPIXFE', MODEL.CORR_DATE)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'DLA_CPIXFE', MODEL.CORR_DATE)), ...
            'AutoSave', true);
    
    end
    
    % Corrimiento Anterior/Escenario

    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_ant; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.a1*d.DLA_CPIXFE.shift(-1) (1-d.a1)*d.E_DLA_CPIXFE,...
         d.a2*d.RMC d.SHK_DLA_CPIXFE],...
        'stacked');
    
    hold on
    
    % Lineas
    plot(rng{1}:params.EndDatePlot{1}, d.DLA_CPIXFE,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.DLA_CPIXFE,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    if strcmp(params.Esc_add{1}, 'v0')
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
      
    else
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');    
    end
    
    hold off
    
    legend({'Inflación subyacente (rezago)', 'Inflación subyacente (expectativas)', 'RMC', 'Shock (Inflación subyacente)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([1 0.373 0.263;...
                0.208 0.22 0.314;...
                0.729 0.612 0.184;...
                0.4660 0.6740 0.1880])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Inflación subyacente',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Inflación subyacente',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            MODEL.Esc.(params.Esc_add{1}).name,...
            'FontSize', 17)
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'DLA_CPIXFE', params.date_ant)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'DLA_CPIXFE', params.date_ant)), ...
            'AutoSave', true);
    
    end
    
    
end

%% Regla de Taylor (Tasa de Interés)
for rng = params.StartDate
    % Corrimiento actual
    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_cur; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.g1*d.RS.shift(-1) (1-d.g1)*d.RSNEUTRAL,...
         (1-d.g1)*d.g2*d.D4L_CPI_DEV,...
         (1-d.g1)*d.g3*d.L_GDP_GAP d.SHK_RS],...
        'stacked');
    
    hold on
    
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.RS,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.RS,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
    
    hold off
    
    legend({'Tasa de Interés (rezago)', 'Tasa de Interés Neutral', 'Inflación total (Desviaciones de la meta)',...
            'Producto doméstico (brecha)', 'Shock (Tasa de Interés)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.208 0.957 0.792;...
                0.804 0.694 0.612;...
                1 1 0.502;...
                0.435 0.584 0.851;...
                0.69 0.4 0.376])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Tasa de Interés',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Tasa de Interés',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'Corrimiento Libre',...
            'FontSize', 17)    
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'RS', MODEL.CORR_DATE)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'RS', MODEL.CORR_DATE)), ...
            'AutoSave', true);
    
    end
    
    % Corrimiento Anterior/Escenario

    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_ant; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.g1*d.RS.shift(-1) (1-d.g1)*d.RSNEUTRAL,...
         (1-d.g1)*d.g2*d.D4L_CPI_DEV,...
         (1-d.g1)*d.g3*d.L_GDP_GAP d.SHK_RS],...
        'stacked');
    
    hold on
    
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.RS,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.RS,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    if strcmp(params.Esc_add{1}, 'v0')
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
      
    else
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');    
    end
    
    hold off
    
    legend({'Tasa de Interés (rezago)', 'Tasa de Interés Neutral', 'Inflación total (Desviaciones de la meta)',...
            'Producto doméstico (brecha)', 'Shock (Tasa de interés)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.208 0.957 0.792;...
                0.804 0.694 0.612;...
                1 1 0.502;...
                0.435 0.584 0.851;...
                0.69 0.4 0.376])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Tasa de Interés',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Tasa de Interés',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            MODEL.Esc.(params.Esc_add{1}).name,...
            'FontSize', 17)    
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'RS', params.date_ant)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'RS', params.date_ant)), ...
            'AutoSave', true);
    
    end
    
    
end

%% Base Monetaria
for rng = params.StartDate
    % Corrimiento actual
    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_cur; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.D4L_CPI d.j1*d.D4L_GDP,...
         -d.j2*(d.RS - d.RS.shift(-4)),...
         d.PM_D4L_MB],...
        'stacked');
    
    hold on
    
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.D4L_MB,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.D4L_MB,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
    
    hold off
    
    legend({'Inflación Doméstica', 'Crecimiento del Producto Doméstico',...
            'Variación Interanual de la Tasa de Interés',...
            'Shock (Política Monetaria)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.502 0.627 0.435;...
                0.435 0.584 0.851;...
                0.561 0.961 0.345;...
                0.89 0.616 0.961])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Base Monetaria',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Base Monetaria',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'Corrimiento Libre',...
            'FontSize', 17)    
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'D4L_MB', MODEL.CORR_DATE)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'D4L_MB', MODEL.CORR_DATE)), ...
            'AutoSave', true);
    
    end
    
    % Corrimiento Anterior/Escenario

    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_ant; 
    bar(rng{1}:params.EndDatePlot{1},...
        [d.D4L_CPI d.j1*d.D4L_GDP,...
         -d.j2*(d.RS - d.RS.shift(-4)),...
         d.PM_D4L_MB],...
        'stacked');
    
    hold on
    
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.D4L_MB,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.D4L_MB,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    if strcmp(params.Esc_add{1}, 'v0')
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
      
    else
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');    
    end
    
    hold off
    
    legend({'Inflación Doméstica', 'Crecimiento del Producto Doméstico',...
            'Variación Interanual de la Tasa de Interés',...
            'Shock (Política Monetaria)'},...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.502 0.627 0.435;...
                0.435 0.584 0.851   ;...
                0.561 0.961 0.345;...
                0.89 0.616 0.961])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Base Monetaria',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Base Monetaria',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            MODEL.Esc.(params.Esc_add{1}).name,...
            'FontSize', 17)    
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'D4L_MB', params.date_ant)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'D4L_MB', params.date_ant)), ...
            'AutoSave', true);
    
    end
    
    
end



%% Tipo de cambio nominal (UIP)
for rng = params.StartDate
    % Corrimiento actual
    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_cur; 
    bar(rng{1}:params.EndDatePlot{1}, [ ... 
            (d.h2 + (1-d.h2) * d.e1) * d.L_S.shift(-1), ... Rezago
            (1-d.h2)*(1-d.e1)*d.L_S.shift(+1), ...          Adelanto 
            (d.h2 / 4) * d.DLA_S_TAR,...                    Ajuste cambiario de mediano plazo
            (1 - d.h2) * d.e1 * (2/4) * (d.D4L_CPI_TAR - d.ss_DLA_CPI_RW + d.DLA_Z_BAR), ... Ajuste de mediano plazo(1-d.h2)*d.e1*(2/4)*d.DLA_Z_BAR.diff,...
            (1 - d.h2) * d.RS_RW / 4,...                    Tasa de interés externa
             -(1-d.h2) * d.RS / 4, ...                      Tasa de interés doméstica
            (1 - d.h2) * d.h3 * (d.PM_D4L_MB) / 4,...       Shock persistente de BM
            (1 - d.h2) * d.PREM / 4,...                     Prima de riesgo
            d.SHK_L_S
        ], ...
        'stacked');
   
    hold on
    
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.L_S,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.L_S,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    vline(...
          MODEL.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
    
    hold off
    
    legend({'Rezago',...
            'Expectativas Cambiarias',...
            'Tendencia Cambiaria Nominal',...
            'Tendencia Cambiaria Real',...
            'Tasa de interés Externa',...
            'Tasa de interés doméstica',...
            'Shock persistente de Base Monetaria',...
            'Prima Riesgo-País',...
            'Shock al TCN',...
            },...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.502 0.627 0.435;...1
                0.435 0.584 0.851;...2
                0.561 0.961 0.345;...3
                0.89 0.616 0.961;...4
                0 0.4470 0.7410;...5
                0.8500 0.3250 0.0980;...6
                0.9290 0.6940 0.1250;...7
                0.4940 0.1840 0.5560;...
                0.6350 0.0780 0.1840...
                ])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Tipo de Cambio Nominal',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Tipo de Cambio Nominal',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'Corrimiento Libre',...
            'FontSize', 17)    
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'L_S', MODEL.CORR_DATE)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'L_S', MODEL.CORR_DATE)), ...
            'AutoSave', true);
    
    end
    
    % Corrimiento Anterior/Escenario

    figure;
    set(gcf, ...
        'defaultaxesfontsize',12, ...
        'Position', [1 42.0182 1.6756e+03 825.6000]);
    
    % Barras
    d = d_ant; 
    bar(rng{1}:params.EndDatePlot{1},[ ... 
            (d.h2 + (1-d.h2) * d.e1) * d.L_S.shift(-1), ... Rezago
            (1-d.h2)*(1-d.e1)*d.L_S.shift(+1), ...          Adelanto 
            (d.h2 / 4) * d.DLA_S_TAR,...                    Ajuste cambiario de mediano plazo
            (1 - d.h2) * d.e1 * (2/4) * (d.D4L_CPI_TAR - d.ss_DLA_CPI_RW + d.DLA_Z_BAR), ... Ajuste de mediano plazo(1-d.h2)*d.e1*(2/4)*d.DLA_Z_BAR.diff,...
            (1 - d.h2) * d.RS_RW / 4,...                    Tasa de interés externa
             -(1-d.h2) * d.RS / 4, ...                      Tasa de interés doméstica
            (1 - d.h2) * d.h3 * (d.PM_D4L_MB) / 4,...       Shock persistente de BM
            (1 - d.h2) * d.PREM / 4,...                     Prima de riesgo
            d.SHK_L_S
        ], ...
        'stacked');
    
    hold on
    
    % Líneas
    plot(rng{1}:params.EndDatePlot{1}, d.L_S,'w','LineWidth',5);
    plot(rng{1}:params.EndDatePlot{1}, d.L_S,'k.-','LineWidth',2, 'MarkerSize', 20);
    
    if strcmp(params.Esc_add{1}, 'v0')
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');
      
    else
    vline(...
          full_data_add.DATES.hist_end,...
          'LineWidth', 1, ...
          'LineStyle', '-.');    
    end
    
    hold off
    
     legend({'Rezago',...
            'Expectativas Cambiarias',...
            'Tendencia Cambiaria Nominal',...
            'Tendencia Cambiaria Real',...
            'Tasa de interés Externa',...
            'Tasa de interés doméstica',...
            'Shock persistente de Base Monetaria',...
            'Prima Riesgo-País',...
            'Shock al TCN',...
            },...
        'FontSize', 14,...
        'Location', 'Best', 'Interpreter', 'none')
    
    colororder([0.502 0.627 0.435;...1
                0.435 0.584 0.851;...2
                0.561 0.961 0.345;...3
                0.89 0.616 0.961;...4
                0 0.4470 0.7410;...5
                0.8500 0.3250 0.0980;...6
                0.9290 0.6940 0.1250;...7
                0.4940 0.1840 0.5560;...
                0.6350 0.0780 0.1840...
                ])

    if strcmp(params.Esc_add{1}, 'v0')
    title({'Tipo de Cambio Nominal',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            'FontSize', 17)
    else
    title({'Tipo de Cambio Nominal',...
        subtitle,...
        strcat(dat2char(rng{1}),...
            '-',dat2char(params.EndDatePlot{1}))},...
            MODEL.Esc.(params.Esc_add{1}).name,...
            'FontSize', 17)    
    end
    
    grid on
        
    % Guardamos la gráfica
    if rng{1} == params.StartDate{1}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'long',...
            sprintf("%s_%s.png", 'L_S', params.date_ant)), ...
            'AutoSave', true);

    elseif rng{1} == params.StartDate{2}
            SimTools.scripts.pausaGuarda(...
            fullfile(params.SavePath, 'short',...
            sprintf("%s_%s_short.png", 'L_S', params.date_ant)), ...
            'AutoSave', true);
    
    end
    
    
end
end